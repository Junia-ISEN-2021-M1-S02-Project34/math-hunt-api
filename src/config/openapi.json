{
  "openapi": "3.0.0",
  "info": 
  {
    "title": "math-hunt-api",
    "version": "1.0",
    "description": "API du jeu de piste math√©matique",
    "contact": 
    {
      "name": "ISEN Lille"
    }
  },
  "paths": 
  {
    "/answer/create/answer": 
    {
      "post": 
      {
        "summary": "Create New Answer",
        "operationId": "post-answer",
        "responses": 
        {
          "201": 
          {
            "description": "Answer Created",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "enigmaId": 
                  {
                    "type": "string"
                  },
                  "isMcq": 
                  {
                    "type": "boolean"
                  },
                  "solution": 
                  {
                    "type": "string"
                  },
                  "attemptsNumber": 
                  {
                    "type": "number"
                  }
                },
                "required": 
                [
                  "enigmaId",
                  "isMcq",
                  "solution",
                  "attemptsNumber"
                ]
              },
              "examples": {}
            }
          },
          "description": "Post the necessary fields for the API to create a new answer."
        },
        "description": "Create a new answer.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/answer/get/answers": 
    {
      "get": 
      {
        "summary": "Get All Answers",
        "operationId": "get-answers",
        "responses": 
        {
          "200": 
          {
            "description": "Got all answers",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get all answers.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/answer/get/answer/{id}": 
    {
      "get": 
      {
        "summary": "Get Answer by ID",
        "operationId": "get-answerbyid",
        "responses": 
        {
          "200": 
          {
            "description": "Got answer by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Got answer by ID.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/answer/get/answer/enigma/{id}": 
    {
      "get": 
      {
        "summary": "Get Answer by Enigma ID",
        "operationId": "get-answerbyenigmaid",
        "responses": 
        {
          "200": 
          {
            "description": "Got answer by enigma ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get answer by enigma ID.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/answer/delete/answer/{id}": 
    {
      "delete": 
      {
        "summary": "Delete Answer by ID",
        "operationId": "delete-answerbyid",
        "responses": 
        {
          "200": 
          {
            "description": "Answer Deleted by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete answer by ID.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/answer/update/answer/{id}": 
    {
      "put": 
      {
        "summary": "Update Answer by ID",
        "operationId": "put-answerbyid",
        "responses": 
        {
          "200": 
          {
            "description": "Answer by ID updated",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Answer"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "isMcq": 
                  {
                    "type": "boolean"
                  },
                  "solution": 
                  {
                    "type": "string"
                  },
                  "attemptsNumber": 
                  {
                    "type": "number"
                  }
                },
                "required": 
                [
                  "isMcq",
                  "solution",
                  "attemptsNumber"
                ]
              },
              "examples": {}
            }
          },
          "description": "Post the necessary fields for the API to update an answer by ID."
        },
        "description": "Update answer by ID.",
        "tags": 
        [
          "/answer"
        ]
      },
      "parameters": []
    },
    "/admin/create/admin": 
    {
      "post": 
      {
        "summary": "Create New Admin",
        "operationId": "post-admin",
        "responses": 
        {
          "201": 
          {
            "description": "Admin Created",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Admin"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "username": 
                  {
                    "type": "string"
                  },
                  "password": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "username",
                  "password"
                ]
              },
              "examples": {}
            }
          },
          "description": "Post the necessary fields for the API to create a new admin."
        },
        "description": "Create a new admin.",
        "tags": 
        [
          "/admin"
        ]
      },
      "parameters": []
    },
    "/admin/update/admin/{username}": 
    {
      "put": 
      {
        "summary": "Update Admin Password",
        "operationId": "put-admin",
        "responses": 
        {
          "200":
          {
            "description": "Admin Updated",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Admin"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "password": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "password"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to update admin password."
        },
        "description": "Update admin password.",
        "tags": 
        [
          "/admin"
        ]
      },
      "parameters": []
    },
    "/enigma/create/enigma": 
    {
      "post": 
      {
        "summary": "Create New Enigma",
        "operationId": "create-enigma",
        "responses": 
        {
          "200":
          {
            "description": "New Enigma Created",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "description": 
                  {
                    "type": "string"
                  },
                  "pictureUrl": 
                  {
                    "type": "string"
                  },
                  "question": 
                  {
                    "type": "string"
                  },
                  "positionX": 
                  {
                    "type": "number"
                  },
                  "positionY": 
                  {
                    "type": "number"
                  },
                  "scoreValue": 
                  {
                    "type": "number"
                  },
                  "isActive": 
                  {
                    "type": "boolean"
                  },
                  "geoGroupId": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "name",
                  "description",
                  "pictureUrl",
                  "question",
                  "positionX",
                  "positionY",
                  "scoreValue",
                  "isActive",
                  "geoGroupId"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to create new enigma."
        },
        "description": "Create new enigma.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/get/enigmas": 
    {
      "get": 
      {
        "summary": "Get All Enigmas",
        "operationId": "get-enigmas",
        "responses": 
        {
          "200":
          {
            "description": "Got All Enigmas",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get all enigmas.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/get/enigma/{id}": 
    {
      "get": 
      {
        "summary": "Get Enigma by ID",
        "operationId": "get-enigmabyid",
        "responses": 
        {
          "200":
          {
            "description": "Got Enigma by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get enigma by ID.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/get/geoGroup/{id}": 
    {
      "get": 
      {
        "summary": "Get Enigma by GeoGroup ID",
        "operationId": "get-enigmabygeogroupid",
        "responses": 
        {
          "200":
          {
            "description": "Got Enigma by GeoGroup ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get enigma by geoGroup ID.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/update/enigma/{id}": 
    {
      "put": 
      {
        "summary": "Update Enigma by ID",
        "operationId": "update-enigmabyid",
        "responses": 
        {
          "200":
          {
            "description": "Enigma Updated by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "description": 
                  {
                    "type": "string"
                  },
                  "pictureUrl": 
                  {
                    "type": "string"
                  },
                  "question": 
                  {
                    "type": "string"
                  },
                  "positionX": 
                  {
                    "type": "number"
                  },
                  "positionY": 
                  {
                    "type": "number"
                  },
                  "scoreValue": 
                  {
                    "type": "number"
                  },
                  "isActive": 
                  {
                    "type": "boolean"
                  },
                  "geoGroupId": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "name",
                  "description",
                  "pictureUrl",
                  "question",
                  "positionX",
                  "positionY",
                  "scoreValue",
                  "isActive",
                  "geoGroupId"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to update an enigma by ID."
        },
        "description": "Update enigma by ID.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/delete/enigma/{id}": 
    {
      "delete": 
      {
        "summary": "Delete Enigma by ID",
        "operationId": "delete-enigmabyid",
        "responses": 
        {
          "200":
          {
            "description": "Enigma Deleted by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Enigma"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Delete an enigma by ID.",
        "tags": 
        [
          "/enigma"
        ]
      },
      "parameters": []
    },
    "/enigma/create/game": 
    {
      "post": 
      {
        "summary": "Create New Game",
        "operationId": "create-game",
        "responses": 
        {
          "200":
          {
            "description": "New Game Created",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "startDate": 
                  {
                    "type": "date"
                  },
                  "duration": 
                  {
                    "type": "number"
                  }
                },
                "required": 
                [
                  "name",
                  "duration"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to create a new game."
        },
        "description": "Create new game.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/update/game/{id]": 
    {
      "put": 
      {
        "summary": "Update Game by ID",
        "operationId": "update-gamebyid",
        "responses": 
        {
          "200":
          {
            "description": "Game Updated by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "duration": 
                  {
                    "type": "number"
                  }
                },
                "required": 
                [
                  "name",
                  "duration"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to update a game by ID."
        },
        "description": "Update game by ID.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/get/games": 
    {
      "get": 
      {
        "summary": "Get All Games",
        "operationId": "get-games",
        "responses": 
        {
          "200":
          {
            "description": "Got All Games",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get all games.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/get/game/{id}": 
    {
      "get": 
      {
        "summary": "Get Game by ID",
        "operationId": "get-gamebyid",
        "responses": 
        {
          "200":
          {
            "description": "Got Game by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Get game by ID.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/delete/game/{id}": 
    {
      "delete": 
      {
        "summary": "Delete Game by ID",
        "operationId": "delete-gamebyid",
        "responses": 
        {
          "200":
          {
            "description": "Game Deleted by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Game delete by ID.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/start/game/{id]": 
    {
      "put": 
      {
        "summary": "Start a Game by ID",
        "operationId": "start-gamebyid",
        "responses": 
        {
          "200":
          {
            "description": "Game Started by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/Game"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "startDate": 
                  {
                    "type": "date"
                  },
                  "isStarted": 
                  {
                    "type": "boolean"
                  }
                }
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to start a game by ID."
        },
        "description": "Start a game by ID.",
        "tags": 
        [
          "/game"
        ]
      },
      "parameters": []
    },
    "/enigma/create/geoGroup": 
    {
      "post": 
      {
        "summary": "Create New geoGroup",
        "operationId": "create-geogroup",
        "responses": 
        {
          "200":
          {
            "description": "New geoGroup Created",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/geoGroup"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "positionX": 
                  {
                    "type": "number"
                  },
                  "positionY": 
                  {
                    "type": "number"
                  },
                  "radius": 
                  {
                    "type": "number"
                  },
                  "pictureUrl": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "name",
                  "positionX",
                  "positionY",
                  "radius",
                  "pictureUrl"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to create a new geoGroup."
        },
        "description": "Create new geoGroup.",
        "tags": 
        [
          "/geoGroup"
        ]
      },
      "parameters": []
    },
    "/enigma/update/geoGroup/{id}": 
    {
      "put": 
      {
        "summary": "Update geoGroup by ID",
        "operationId": "update-geogroupbyid",
        "responses": 
        {
          "200":
          {
            "description": "geoGroup Updated by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/geoGroup"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": 
        {
          "content": 
          {
            "application/json": 
            {
              "schema": 
              {
                "type": "object",
                "properties": 
                {
                  "name": 
                  {
                    "type": "string"
                  },
                  "positionX": 
                  {
                    "type": "number"
                  },
                  "positionY": 
                  {
                    "type": "number"
                  },
                  "radius": 
                  {
                    "type": "number"
                  },
                  "pictureUrl": 
                  {
                    "type": "string"
                  }
                },
                "required": 
                [
                  "name",
                  "positionX",
                  "positionY",
                  "radius",
                  "pictureUrl"
                ]
              },
              "examples": {}
            }
          },
          "description": "Put the necessary fields for the API to update a geoGroup by ID."
        },
        "description": "Update a geoGroup by ID.",
        "tags": 
        [
          "/geoGroup"
        ]
      },
      "parameters": []
    },
    "/enigma/create/geoGroups": 
    {
      "get": 
      {
        "summary": "Get All geoGroup",
        "operationId": "get-geogroups",
        "responses": 
        {
          "200":
          {
            "description": "Got All geoGroups",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/geoGroup"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Got all geoGroups.",
        "tags": 
        [
          "/geoGroup"
        ]
      },
      "parameters": []
    },
    "/enigma/create/geoGroup/{id}": 
    {
      "get": 
      {
        "summary": "Get geoGroup by ID",
        "operationId": "get-geogroupbyid",
        "responses": 
        {
          "200":
          {
            "description": "Got geoGroup by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/geoGroup"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Got geoGroup by ID.",
        "tags": 
        [
          "/geoGroup"
        ]
      },
      "parameters": []
    },
    "/enigma/delete/geoGroup/{id}": 
    {
      "get": 
      {
        "summary": "Delete geoGroup by ID",
        "operationId": "delete-geogroupbyid",
        "responses": 
        {
          "200":
          {
            "description": "geoGroup Deleted by ID",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "$ref": "#/components/schemas/geoGroup"
                },
                "examples": {}
              }
            }
          },
          "500": 
          {
            "description": "Error",
            "content": 
            {
              "application/json": 
              {
                "schema": 
                {
                  "type": "object",
                  "properties": 
                  {
                    "error": 
                    {
                      "type": "string"
                    },
                    "": 
                    {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        },
        "description": "geoGroup deleted by ID.",
        "tags": 
        [
          "/geoGroup"
        ]
      },
      "parameters": []
    },
  },
  "components": 
  {
    "schemas": 
    {
      "Answer": 
      {
        "title": "Answer",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": 
        {
          "_id": 
          {
            "type": "string",
            "description": ""
          },
          "enigmaId":
          {
            "type": "string"
          },
          "isMcq": 
          {
            "type": "boolean"
          },
          "solution": 
          {
            "type": "string",
            "format": "email"
          },
          "attemptsNumber": 
          {
            "type": "integer"
          }
        },
        "required": 
        [
        "_id",
        "enigmaId",
        "isMcq",
        "solution",
        "attemptsNumber"
        ]
      },
      "Admin": 
      {
        "title": "Admin",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": 
        {
          "username": 
          {
            "type": "string"
          },
          "password":
          {
            "type": "string"
          }
        },
        "required": 
        [
        "username",
        "password"
        ]
      },
      "Enigma": 
      {
        "title": "Enigma",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": 
        {
          "_id": 
          {
            "type": "string",
            "description": ""
          },
          "name": 
          {
            "type": "string"
          },
          "description": 
          {
            "type": "string"
          },
          "pictureUrl": 
          {
            "type": "string"
          },
          "question": 
          {
            "type": "string"
          },
          "positionX": 
          {
            "type": "number"
          },
          "positionY": 
          {
            "type": "number"
          },
          "scoreValue": 
          {
            "type": "number"
          },
          "isActive": 
          {
            "type": "boolean"
          },
          "isLinked": 
          {
            "type": "boolean"
          },
          "geoGroupId": 
          {
            "type": "string"
          },
          "nextEnigmaId": 
          {
            "type": "string"
          }
        },
        "required": 
        [
        "_id",
        "name",
        "description",
        "pictureUrl",
        "question",
        "positionX",
        "positionY",
        "scoreValue",
        "isActive",
        "isLinked",
        "geoGroupId",
        "nextEnigmaId"
        ]
      },
      "Game": 
      {
        "title": "Game",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": 
        {
          "_id": 
          {
            "type": "string",
            "description": ""
          },
          "name": 
          {
            "type": "string"
          },
          "startDate":
          {
            "type": "date"
          },
          "duration":
          {
            "type": "number"
          },
          "isStarted":
          {
            "type": "boolean"
          }
        },
        "required": 
        [
        "_id",
        "name",
        "duration"
        ]
      },
      "geoGroup": 
      {
        "title": "Game",
        "type": "object",
        "description": "",
        "x-examples": {},
        "properties": 
        {
          "_id": 
          {
            "type": "string",
            "description": ""
          },
          "name": 
          {
            "type": "string"
          },
          "positionX":
          {
            "type": "number"
          },
          "positionY":
          {
            "type": "number"
          },
          "radius":
          {
            "type": "number"
          },
          "pictureUrl":
          {
            "type": "number"
          }
        },
        "required": 
        [
        "_id",
        "name",
        "positionX",
        "positionY",
        "radius",
        "pictureUrl"
        ]
      }
    },
    "securitySchemes": {}
  },
  "servers": 
  [
    {
      "url": "http://localhost:3000/api",
      "description": ""
    }
  ],
  "security": [],
  "tags": 
  [
    {
      "name": "/answer"
    },
    {
      "name": "/admin"
    },
    {
      "name": "/enigma"
    },
    {
      "name": "/game"
    },
    {
      "name": "/geoGroup"
    }
  ]
}